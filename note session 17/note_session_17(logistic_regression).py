# -*- coding: utf-8 -*-
"""note session 17(Logistic Regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GbAbclu83337eLhsVs2mNVMX37uiFATz

Logistic Regression
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""importing dataset

"""

dataset = pd.read_csv('Social_Network_Ads.csv')
dataset

x = dataset.iloc[:,2:4].values
y = dataset.iloc[:,-1]

"""spliting the dataset"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test =train_test_split(x,y,test_size=.25,random_state=0)

"""feature scaling

هيعطل عشان الاكسات عندي بعيدة من بعضها 
فعمل اسكيلينج للاكسات
"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.fit_transform(x_test)

"""traing logistic on training set"""

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state=0).fit(x_train,y_train)

"""predict the test"""

y_pred = classifier.predict(x_test)

print(y_pred,y_test)

"""making the confusion matrix"""

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)
cm

"""visualize training set"""

from matplotlib.colors import ListedColormap
x_set, y_set = x_train, y_train
X1, X2 = np.meshgrid(np.arange(start = x_set[:, 0].min() - 1, stop = x_set[:, 0].max() + 1, step = 0.01),
                     np.arange(start = x_set[:, 1].min() - 1, stop = x_set[:, 1].max() + 1, step = 0.01))
plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),
             alpha = 0.75, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1],
                c = ListedColormap(('red', 'green'))(i), label = j)
plt.title('Logistic Regression (Training set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show()

