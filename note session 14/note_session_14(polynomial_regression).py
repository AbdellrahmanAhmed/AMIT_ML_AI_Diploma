# -*- coding: utf-8 -*-
"""note session 14(polynomial regression).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QDbMGUh5NqrmY2-hXiwSNriWju6KkhNA

#polynomial regression
#####طبيعتها انها منحنية

import the libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset = pd.read_csv('Position_Salaries.csv')
dataset

dataset.info()

#indep مش معتمدة ع حاجة
#Level
x = dataset.iloc[:,1:-1].values
#dep معتمده ع حاجة
#Salary
y = dataset.iloc[:,-1]

"""##train  linear regression on the whole dataset"""

from sklearn.linear_model import LinearRegression
linReg = LinearRegression()
linReg.fit(x,y)

"""###Visualization Linear Regression"""

plt.scatter(x,y,color = 'red')
plt.plot(x,linReg.predict(x),color='blue')

"""##train polynomial regression on the whole dataset

كل مرفع لأس أعلى كل ما تكون مغطية الدالة المنحنية
"""

from sklearn.preprocessing import PolynomialFeatures
polyReg = PolynomialFeatures(degree = 4)
#transform بيطبق على الدالة بتعتي
xPoly = polyReg.fit_transform(x)
#في الاخر هتبقى انحدار خطي عادي لانه كله في الاخر عبارة عن ارقام وليست ارقام اصلها اكس اس رقم
linReg2 = LinearRegression()
linReg2.fit(xPoly,y)

"""###Visualization Linear Regression"""

plt.scatter(x,y,color = 'red')
plt.plot(x,linReg2.predict(polyReg.fit_transform(x)),color='blue')

